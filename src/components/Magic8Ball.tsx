/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Arnau Llobera Donoso (https://sketchfab.com/arnaullobera)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/magic-8-ball-with-dice-af61ed06db4e44ad94da4ba9f6434904
title: Magic 8 Ball with Dice
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import { Group, Mesh } from 'three';
import { useFrame } from '@react-three/fiber';
import useOptions from '../state/useOptions';
import { animated, useSpring } from '@react-spring/three';
import useClicked from '../state/useClicked';

type GLTFResult = GLTF & {
  nodes: {
    Dice_lambert1_0: THREE.Mesh;
    Ball_lambert1_0: THREE.Mesh;
    BallGlass_lambert1_0: THREE.Mesh;
  };
  materials: {
    lambert1: THREE.MeshStandardMaterial;
  };
};

export const Magic8Ball = (props: JSX.IntrinsicElements['group']) => {
  const { nodes, materials } = useGLTF(
    '/models/magic8Ball/scene.gltf'
  ) as unknown as GLTFResult;
  const { clicked, setClicked } = useClicked((state) => state);
  const { options, setChosenOption } = useOptions((state) => state);
  const magic8BallRef = useRef<Group>(null!);

  useFrame(({ clock }) => {
    const time = clock.getElapsedTime();
    magic8BallRef.current.rotation.y = time / 4;
    magic8BallRef.current.rotation.x = time / 4;
    magic8BallRef.current.rotation.z = time / 4;
  });

  const { position } = useSpring({
    position: clicked ? [0, -100, 0] : [0, 0, 0],
    config: { precision: 0.0001, mass: 30, tension: 80, friction: 40 }
  });

  const selectRandom = () => {
    setClicked(true);
    setTimeout(() => {
      setClicked(false);
    }, 500);
    const randomlySelectedOption =
      options[Math.floor(Math.random() * options.length)];
    setTimeout(() => {
      setChosenOption(randomlySelectedOption.optionText);
    }, 6000);
  };

  return (
    <animated.group
      {...props}
      dispose={null}
      ref={magic8BallRef}
      position={position}
    >
      <group rotation={[Math.PI, 0, Math.PI]} onClick={selectRandom}>
        <mesh
          geometry={nodes.Ball_lambert1_0.geometry}
          material={materials.lambert1}
        />
        <mesh
          geometry={nodes.BallGlass_lambert1_0.geometry}
          material={materials.lambert1}
        />
      </group>
    </animated.group>
  );
};

useGLTF.preload('/models/magic8Ball/scene.gltf');
